/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 *
 * Manual modifications:
 * - HttpsOpentelemetryIoOtelconfigInstrumentationJson add undefined to index type and ts-expect-error to general
 * - ExperimentalGeneralInstrumentation add index type
 */

export type OtlpHttpExporter = {
  endpoint?: string | null;
  certificate_file?: string | null;
  client_key_file?: string | null;
  client_certificate_file?: string | null;
  headers?: NameStringValuePair[];
  headers_list?: string | null;
  compression?: string | null;
  timeout?: number | null;
  encoding?: ("protobuf" | "json") | null;
} & ({
  endpoint?: string | null;
  certificate_file?: string | null;
  client_key_file?: string | null;
  client_certificate_file?: string | null;
  headers?: NameStringValuePair[];
  headers_list?: string | null;
  compression?: string | null;
  timeout?: number | null;
  encoding?: ("protobuf" | "json") | null;
} | null) & {
    endpoint?: string | null;
    certificate_file?: string | null;
    client_key_file?: string | null;
    client_certificate_file?: string | null;
    headers?: NameStringValuePair[];
    headers_list?: string | null;
    compression?: string | null;
    timeout?: number | null;
    encoding?: ("protobuf" | "json") | null;
  } & ({
    endpoint?: string | null;
    certificate_file?: string | null;
    client_key_file?: string | null;
    client_certificate_file?: string | null;
    headers?: NameStringValuePair[];
    headers_list?: string | null;
    compression?: string | null;
    timeout?: number | null;
    encoding?: ("protobuf" | "json") | null;
  } | null);
export type OtlpGrpcExporter = {
  endpoint?: string | null;
  certificate_file?: string | null;
  client_key_file?: string | null;
  client_certificate_file?: string | null;
  headers?: NameStringValuePair[];
  headers_list?: string | null;
  compression?: string | null;
  timeout?: number | null;
  insecure?: boolean | null;
} & ({
  endpoint?: string | null;
  certificate_file?: string | null;
  client_key_file?: string | null;
  client_certificate_file?: string | null;
  headers?: NameStringValuePair[];
  headers_list?: string | null;
  compression?: string | null;
  timeout?: number | null;
  insecure?: boolean | null;
} | null) & {
    endpoint?: string | null;
    certificate_file?: string | null;
    client_key_file?: string | null;
    client_certificate_file?: string | null;
    headers?: NameStringValuePair[];
    headers_list?: string | null;
    compression?: string | null;
    timeout?: number | null;
    insecure?: boolean | null;
  } & ({
    endpoint?: string | null;
    certificate_file?: string | null;
    client_key_file?: string | null;
    client_certificate_file?: string | null;
    headers?: NameStringValuePair[];
    headers_list?: string | null;
    compression?: string | null;
    timeout?: number | null;
    insecure?: boolean | null;
  } | null);
export type ExperimentalOtlpFileExporter = {
  output_stream?: string | null;
} & ({
  output_stream?: string | null;
} | null) & {
    output_stream?: string | null;
  } & ({
    output_stream?: string | null;
  } | null);
export type ConsoleExporter = {} | null;
export type OtlpHttpMetricExporter = {
  endpoint?: string | null;
  certificate_file?: string | null;
  client_key_file?: string | null;
  client_certificate_file?: string | null;
  headers?: NameStringValuePair[];
  headers_list?: string | null;
  compression?: string | null;
  timeout?: number | null;
  encoding?: ("protobuf" | "json") | null;
  temporality_preference?: ("cumulative" | "delta" | "low_memory") | null;
  default_histogram_aggregation?: ("explicit_bucket_histogram" | "base2_exponential_bucket_histogram") | null;
} & ({
  endpoint?: string | null;
  certificate_file?: string | null;
  client_key_file?: string | null;
  client_certificate_file?: string | null;
  headers?: NameStringValuePair[];
  headers_list?: string | null;
  compression?: string | null;
  timeout?: number | null;
  encoding?: ("protobuf" | "json") | null;
  temporality_preference?: ("cumulative" | "delta" | "low_memory") | null;
  default_histogram_aggregation?: ("explicit_bucket_histogram" | "base2_exponential_bucket_histogram") | null;
} | null);
export type OtlpGrpcMetricExporter = {
  endpoint?: string | null;
  certificate_file?: string | null;
  client_key_file?: string | null;
  client_certificate_file?: string | null;
  headers?: NameStringValuePair[];
  headers_list?: string | null;
  compression?: string | null;
  timeout?: number | null;
  insecure?: boolean | null;
  temporality_preference?: ("cumulative" | "delta" | "low_memory") | null;
  default_histogram_aggregation?: ("explicit_bucket_histogram" | "base2_exponential_bucket_histogram") | null;
} & ({
  endpoint?: string | null;
  certificate_file?: string | null;
  client_key_file?: string | null;
  client_certificate_file?: string | null;
  headers?: NameStringValuePair[];
  headers_list?: string | null;
  compression?: string | null;
  timeout?: number | null;
  insecure?: boolean | null;
  temporality_preference?: ("cumulative" | "delta" | "low_memory") | null;
  default_histogram_aggregation?: ("explicit_bucket_histogram" | "base2_exponential_bucket_histogram") | null;
} | null);
export type ExperimentalOtlpFileMetricExporter = {
  output_stream?: string | null;
  temporality_preference?: ("cumulative" | "delta" | "low_memory") | null;
  default_histogram_aggregation?: ("explicit_bucket_histogram" | "base2_exponential_bucket_histogram") | null;
} & ({
  output_stream?: string | null;
  temporality_preference?: ("cumulative" | "delta" | "low_memory") | null;
  default_histogram_aggregation?: ("explicit_bucket_histogram" | "base2_exponential_bucket_histogram") | null;
} | null);
export type OpenCensusMetricProducer = {} | null;
export type ExperimentalPrometheusMetricExporter = {
  host?: string | null;
  port?: number | null;
  without_units?: boolean | null;
  without_type_suffix?: boolean | null;
  without_scope_info?: boolean | null;
  with_resource_constant_labels?: IncludeExclude;
} & ({
  host?: string | null;
  port?: number | null;
  without_units?: boolean | null;
  without_type_suffix?: boolean | null;
  without_scope_info?: boolean | null;
  with_resource_constant_labels?: IncludeExclude;
} | null);
export type DefaultAggregation = {} | null;
export type DropAggregation = {} | null;
export type ExplicitBucketHistogramAggregation = {
  boundaries?: number[];
  record_min_max?: boolean | null;
} & ({
  boundaries?: number[];
  record_min_max?: boolean | null;
} | null);
export type Base2ExponentialBucketHistogramAggregation = {
  max_scale?: number | null;
  max_size?: number | null;
  record_min_max?: boolean | null;
} & ({
  max_scale?: number | null;
  max_size?: number | null;
  record_min_max?: boolean | null;
} | null);
export type LastValueAggregation = {} | null;
export type SumAggregation = {} | null;
export type TraceContextPropagator = {} | null;
export type BaggagePropagator = {} | null;
export type B3Propagator = {} | null;
export type B3MultiPropagator = {} | null;
export type JaegerPropagator = {} | null;
export type OpenTracingPropagator = {} | null;
export type ZipkinSpanExporter = {
  endpoint?: string | null;
  timeout?: number | null;
} & ({
  endpoint?: string | null;
  timeout?: number | null;
} | null);
export type AlwaysOffSampler = {} | null;
export type AlwaysOnSampler = {} | null;
export type JaegerRemoteSampler = {
  endpoint?: string | null;
  interval?: number | null;
  initial_sampler?: Sampler;
} & ({
  endpoint?: string | null;
  interval?: number | null;
  initial_sampler?: Sampler;
} | null);
export type ParentBasedSampler = {
  root?: Sampler;
  remote_parent_sampled?: Sampler;
  remote_parent_not_sampled?: Sampler;
  local_parent_sampled?: Sampler;
  local_parent_not_sampled?: Sampler;
} & ({
  root?: Sampler;
  remote_parent_sampled?: Sampler;
  remote_parent_not_sampled?: Sampler;
  local_parent_sampled?: Sampler;
  local_parent_not_sampled?: Sampler;
} | null);
export type TraceIdRatioBasedSampler = {
  ratio?: number | null;
} & ({
  ratio?: number | null;
} | null);
/**
 * This interface was referenced by `ExperimentalResourceDetector`'s JSON-Schema definition
 * via the `patternProperty` "container".
 */
export type ExperimentalContainerResourceDetector = {} | null;
/**
 * This interface was referenced by `ExperimentalResourceDetector`'s JSON-Schema definition
 * via the `patternProperty` "host".
 */
export type ExperimentalHostResourceDetector = {} | null;
/**
 * This interface was referenced by `ExperimentalResourceDetector`'s JSON-Schema definition
 * via the `patternProperty` "process".
 */
export type ExperimentalProcessResourceDetector = {} | null;
/**
 * This interface was referenced by `ExperimentalResourceDetector`'s JSON-Schema definition
 * via the `patternProperty` "service".
 */
export type ExperimentalServiceResourceDetector = {} | null;

export interface OpenTelemetryConfiguration {
  file_format: string;
  disabled?: boolean | null;
  log_level?: string | null;
  attribute_limits?: AttributeLimits;
  logger_provider?: HttpsOpentelemetryIoOtelconfigLoggerProviderJson;
  meter_provider?: HttpsOpentelemetryIoOtelconfigMeterProviderJson;
  propagator?: HttpsOpentelemetryIoOtelconfigPropagatorJson;
  tracer_provider?: HttpsOpentelemetryIoOtelconfigTracerProviderJson;
  resource?: HttpsOpentelemetryIoOtelconfigResourceJson;
  "instrumentation/development"?: HttpsOpentelemetryIoOtelconfigInstrumentationJson;
  [k: string]: unknown | undefined;
}
export interface AttributeLimits {
  attribute_value_length_limit?: number | null;
  attribute_count_limit?: number | null;
  [k: string]: unknown | undefined;
}
export interface HttpsOpentelemetryIoOtelconfigLoggerProviderJson {
  /**
   * @minItems 1
   */
  processors: [LogRecordProcessor, ...LogRecordProcessor[]];
  limits?: LogRecordLimits;
  "logger_configurator/development"?: ExperimentalLoggerConfigurator;
}
export interface LogRecordProcessor {
  batch?: BatchLogRecordProcessor;
  simple?: SimpleLogRecordProcessor;
  [k: string]: unknown | undefined;
}
export interface BatchLogRecordProcessor {
  schedule_delay?: number | null;
  export_timeout?: number | null;
  max_queue_size?: number | null;
  max_export_batch_size?: number | null;
  exporter: LogRecordExporter;
}
export interface LogRecordExporter {
  otlp_http?: OtlpHttpExporter;
  otlp_grpc?: OtlpGrpcExporter;
  "otlp_file/development"?: ExperimentalOtlpFileExporter;
  console?: ConsoleExporter;
  [k: string]: unknown | undefined;
}
export interface NameStringValuePair {
  name: string;
  value: string | null;
}
export interface SimpleLogRecordProcessor {
  exporter: LogRecordExporter;
}
export interface LogRecordLimits {
  attribute_value_length_limit?: number | null;
  attribute_count_limit?: number | null;
}
export interface ExperimentalLoggerConfigurator {
  default_config?: ExperimentalLoggerConfig;
  loggers?: ExperimentalLoggerMatcherAndConfig[];
}
export interface ExperimentalLoggerConfig {
  disabled?: boolean;
}
export interface ExperimentalLoggerMatcherAndConfig {
  name?: string;
  config?: ExperimentalLoggerConfig;
}
export interface HttpsOpentelemetryIoOtelconfigMeterProviderJson {
  /**
   * @minItems 1
   */
  readers: [MetricReader, ...MetricReader[]];
  views?: View[];
  exemplar_filter?: ("always_on" | "always_off" | "trace_based") | null;
  "meter_configurator/development"?: ExperimentalMeterConfigurator;
}
export interface MetricReader {
  periodic?: PeriodicMetricReader;
  pull?: PullMetricReader;
}
export interface PeriodicMetricReader {
  interval?: number | null;
  timeout?: number | null;
  exporter: PushMetricExporter;
  producers?: MetricProducer[];
  cardinality_limits?: CardinalityLimits;
}
export interface PushMetricExporter {
  otlp_http?: OtlpHttpMetricExporter;
  otlp_grpc?: OtlpGrpcMetricExporter;
  "otlp_file/development"?: ExperimentalOtlpFileMetricExporter;
  console?: ConsoleExporter;
  [k: string]: unknown | undefined;
}
export interface MetricProducer {
  opencensus?: OpenCensusMetricProducer;
  [k: string]: unknown | undefined;
}
export interface CardinalityLimits {
  default?: number | null;
  counter?: number | null;
  gauge?: number | null;
  histogram?: number | null;
  observable_counter?: number | null;
  observable_gauge?: number | null;
  observable_up_down_counter?: number | null;
  up_down_counter?: number | null;
}
export interface PullMetricReader {
  exporter: PullMetricExporter;
  producers?: MetricProducer[];
  cardinality_limits?: CardinalityLimits;
}
export interface PullMetricExporter {
  "prometheus/development"?: ExperimentalPrometheusMetricExporter;
  [k: string]: unknown | undefined;
}
export interface IncludeExclude {
  included?: string[];
  excluded?: string[];
}
export interface View {
  selector?: ViewSelector;
  stream?: ViewStream;
}
export interface ViewSelector {
  instrument_name?: string | null;
  instrument_type?:
    | (
        | "counter"
        | "gauge"
        | "histogram"
        | "observable_counter"
        | "observable_gauge"
        | "observable_up_down_counter"
        | "up_down_counter"
      )
    | null;
  unit?: string | null;
  meter_name?: string | null;
  meter_version?: string | null;
  meter_schema_url?: string | null;
}
export interface ViewStream {
  name?: string | null;
  description?: string | null;
  aggregation?: Aggregation;
  aggregation_cardinality_limit?: number | null;
  attribute_keys?: IncludeExclude;
}
export interface Aggregation {
  default?: DefaultAggregation;
  drop?: DropAggregation;
  explicit_bucket_histogram?: ExplicitBucketHistogramAggregation;
  base2_exponential_bucket_histogram?: Base2ExponentialBucketHistogramAggregation;
  last_value?: LastValueAggregation;
  sum?: SumAggregation;
}
export interface ExperimentalMeterConfigurator {
  default_config?: ExperimentalMeterConfig;
  meters?: ExperimentalMeterMatcherAndConfig[];
}
export interface ExperimentalMeterConfig {
  disabled?: boolean;
}
export interface ExperimentalMeterMatcherAndConfig {
  name?: string;
  config?: ExperimentalMeterConfig;
}
export interface HttpsOpentelemetryIoOtelconfigPropagatorJson {
  composite?: TextMapPropagator[];
  composite_list?: string | null;
  [k: string]: unknown | undefined;
}
export interface TextMapPropagator {
  tracecontext?: TraceContextPropagator;
  baggage?: BaggagePropagator;
  b3?: B3Propagator;
  b3multi?: B3MultiPropagator;
  jaeger?: JaegerPropagator;
  ottrace?: OpenTracingPropagator;
  [k: string]: unknown | undefined;
}
export interface HttpsOpentelemetryIoOtelconfigTracerProviderJson {
  /**
   * @minItems 1
   */
  processors: [SpanProcessor, ...SpanProcessor[]];
  limits?: SpanLimits;
  sampler?: Sampler;
  "tracer_configurator/development"?: ExperimentalTracerConfigurator;
}
export interface SpanProcessor {
  batch?: BatchSpanProcessor;
  simple?: SimpleSpanProcessor;
  [k: string]: unknown | undefined;
}
export interface BatchSpanProcessor {
  schedule_delay?: number | null;
  export_timeout?: number | null;
  max_queue_size?: number | null;
  max_export_batch_size?: number | null;
  exporter: SpanExporter;
}
export interface SpanExporter {
  otlp_http?: OtlpHttpExporter;
  otlp_grpc?: OtlpGrpcExporter;
  "otlp_file/development"?: ExperimentalOtlpFileExporter;
  console?: ConsoleExporter;
  zipkin?: ZipkinSpanExporter;
  [k: string]: unknown | undefined;
}
export interface SimpleSpanProcessor {
  exporter: SpanExporter;
}
export interface SpanLimits {
  attribute_value_length_limit?: number | null;
  attribute_count_limit?: number | null;
  event_count_limit?: number | null;
  link_count_limit?: number | null;
  event_attribute_count_limit?: number | null;
  link_attribute_count_limit?: number | null;
}
export interface Sampler {
  always_off?: AlwaysOffSampler;
  always_on?: AlwaysOnSampler;
  jaeger_remote?: JaegerRemoteSampler;
  parent_based?: ParentBasedSampler;
  trace_id_ratio_based?: TraceIdRatioBasedSampler;
  [k: string]: unknown | undefined;
}
export interface ExperimentalTracerConfigurator {
  default_config?: ExperimentalTracerConfig;
  tracers?: ExperimentalTracerMatcherAndConfig[];
}
export interface ExperimentalTracerConfig {
  disabled: boolean;
}
export interface ExperimentalTracerMatcherAndConfig {
  name: string;
  config: ExperimentalTracerConfig;
}
export interface HttpsOpentelemetryIoOtelconfigResourceJson {
  attributes?: AttributeNameValue[];
  "detection/development"?: ExperimentalResourceDetection;
  schema_url?: string | null;
  attributes_list?: string | null;
}
export interface AttributeNameValue {
  name: string;
  value: string | number | boolean | null | string[] | boolean[] | number[];
  type?: null | "string" | "bool" | "int" | "double" | "string_array" | "bool_array" | "int_array" | "double_array";
}
export interface ExperimentalResourceDetection {
  attributes?: IncludeExclude;
  detectors?: ExperimentalResourceDetector[];
}
export interface ExperimentalResourceDetector {
  [k: string]: unknown | undefined;
}
export interface HttpsOpentelemetryIoOtelconfigInstrumentationJson {
  general?: ExperimentalGeneralInstrumentation;
  cpp?: ExperimentalLanguageSpecificInstrumentation;
  dotnet?: ExperimentalLanguageSpecificInstrumentation;
  erlang?: ExperimentalLanguageSpecificInstrumentation;
  go?: ExperimentalLanguageSpecificInstrumentation;
  java?: ExperimentalLanguageSpecificInstrumentation;
  js?: ExperimentalLanguageSpecificInstrumentation;
  php?: ExperimentalLanguageSpecificInstrumentation;
  python?: ExperimentalLanguageSpecificInstrumentation;
  ruby?: ExperimentalLanguageSpecificInstrumentation;
  rust?: ExperimentalLanguageSpecificInstrumentation;
  swift?: ExperimentalLanguageSpecificInstrumentation;
  [k: string]: ExperimentalLanguageSpecificInstrumentation | undefined;
}
export interface ExperimentalGeneralInstrumentation {
  peer?: ExperimentalPeerInstrumentation;
  http?: ExperimentalHttpInstrumentation;
  [k: string]: unknown | undefined;
}
export interface ExperimentalPeerInstrumentation {
  service_mapping?: {
    peer: string;
    service: string;
  }[];
}
export interface ExperimentalHttpInstrumentation {
  client?: {
    request_captured_headers?: string[];
    response_captured_headers?: string[];
  };
  server?: {
    request_captured_headers?: string[];
    response_captured_headers?: string[];
  };
}
/**
 * This interface was referenced by `HttpsOpentelemetryIoOtelconfigInstrumentationJson`'s JSON-Schema definition
 * via the `patternProperty` ".*".
 */
export interface ExperimentalLanguageSpecificInstrumentation {
  [k: string]: unknown | undefined;
}
