name: Continuous Integration
on:
  pull_request:
  push:
    branches:
      - main
permissions: read-all

jobs:
  linux-prebuilds:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - container: node:10.13.0
            versions: '8.5.0 9.0.0 10.0.0 11.0.0 12.0.0 13.0.0'
            label: node10
          - container: node:14.0.0
            versions: '14.0.0 15.0.0 16.0.0'
            label: node14
    container: ${{ matrix.container }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: Install npm dependencies
        run: npm ci
      - name: Prebuild
        run: npm run prebuild:os ${{ matrix.versions }}
      - name: Run tests
        run: npm run test
      - name: upload prebuilds
        uses: actions/upload-artifact@v2
        with:
          name: prebuilds-linux-${{ matrix.label }}
          path: prebuilds

  create-package:
    needs:
      - linux-prebuilds
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: download prebuilds
        uses: actions/download-artifact@v2
      - name: copy prebuilds
        run: |
          ls -lh
          mkdir -p prebuilds
          ls -lh prebuilds-linux-node10
          ls -lh prebuilds-linux-node14
          cp -r prebuilds-linux-node10/* prebuilds
          cp -r prebuilds-linux-node14/* prebuilds
          find prebuilds
      - name: Install npm dependencies
        run: npm ci
      - name: Build
        run: npm run compile
      - name: Pack
        run: |
          echo "::set-output name=package_file::$(npm pack)"
      - name: Upload package
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.vars.outputs.package_file }}
          path: ${{ steps.vars.outputs.package_file }}
          
  unit-tests:
    runs-on: ${{ matrix.os }}
    permissions: read-all
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'windows-latest']
        nodejs: ['10', '12', '14', '16']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.nodejs }}
      - name: Install npm dependencies
        run: npm ci
      - name: Test
        run: npm run test
      - name: Report coverage
        run: npm run codecov

  lint:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Fetch base_ref
        run: git fetch origin ${{ github.base_ref }}
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install npm dependencies
        run: npm ci
      - name: Check version
        run: npm run version:check
      - name: Lint commits
        run: npm run lint:commits -- --from origin/${{ github.base_ref }}
      - name: Verify changes
        run: npm run change:check

  build:
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install npm dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Build
        run: npm run compile

  e2e-published:
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get versions
        run: |
          docker-compose --version;
          docker --version;
      - name: Test basic example
        working-directory: test/examples
        run: docker-compose -f e2e.docker-compose.yml -f published.override.yml up --exit-code-from test
      - name: Test express example
        working-directory: test/examples
        run: docker-compose -f e2e.docker-compose.yml -f express.override.yml -f published.override.yml up --exit-code-from test
      - name: Test mixed example
        working-directory: test/examples
        run: docker-compose -f e2e.docker-compose.yml -f mixed.override.yml -f published.override.yml up --exit-code-from test
      - name: Test log-injection example
        working-directory: test/examples
        run: docker-compose -f e2e.docker-compose.yml -f log-injection.override.yml -f published.override.yml up --exit-code-from test

  e2e-local:
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Test basic example
        working-directory: test/examples
        run: docker-compose -f e2e.docker-compose.yml up --exit-code-from test
      - name: Test express example
        working-directory: test/examples
        run: docker-compose -f e2e.docker-compose.yml -f express.override.yml up --exit-code-from test
      - name: Test mixed example
        working-directory: test/examples
        run: docker-compose -f e2e.docker-compose.yml -f mixed.override.yml up --exit-code-from test
      - name: Test log-injection example
        working-directory: test/examples
        run: docker-compose -f e2e.docker-compose.yml -f log-injection.override.yml up --exit-code-from test
