---
# Ensure these variables are defined in defaults/main.yaml or passed in:
# - splunk_dest_folder
# - agent_action
# - agent_version
# - install_agent_from
# - install_string (e.g. 'install')
# - upgrade_string (e.g. 'upgrade')
# - application_name, tier_name, agent_node_name, no_node_name_suffix (optional)
# - splunk_facts (optional)

- name: Take Backup of the installed Splunk Node.js agent
  ansible.builtin.include_tasks: backup.yml

- name: Install Splunk Node.js Agent
  become: true
  block:
    - name: Create Splunk Node.js Agent Directory if not Present
      ansible.builtin.file:
        path: "{{ splunk_dest_folder }}/"
        state: directory
        mode: '0775'

    - name: Include variables for the Splunk controller settings
      ansible.builtin.include_vars:
        dir: vars
        extensions:
          - "yaml"
          - "yml"

    - name: Check if the Splunk Node.js agent package is already installed
      ansible.builtin.shell: "grep -i 'splunk-agent' {{ splunk_dest_folder }}/package.json"
      register: first_time_install
      ignore_errors: true

    # - name: Fail if user is trying to upgrade without a previously installed Node.js agent
    #   ansible.builtin.fail:
    #     msg: "You need to first install the Splunk Node.js agent using `agent_action = install` before you are able to upgrade"
    #   when: (agent_action | lower == upgrade_string) and (first_time_install.rc != 0)

    - name: Install "@splunk/otel" Node.js package
      community.general.npm:
        name: "@splunk/otel"
        version: "{{ agent_version | regex_replace('^[~^]+', '') }}"
        path: "{{ splunk_dest_folder }}"
        registry: "https://registry.npmjs.org"
        state: present
      environment:
        CXXFLAGS: "-std=c++17"
      when: (agent_action | lower == "install") or (first_time_install.rc == 0)

    - name: Splunk_agent_status nodejs
      ansible.builtin.debug:
        msg: '{ "agentInstalled": "Splunk Node.js agent {{ agent_action }} was successful " }'

    - name: Agent startup result set fact
      ansible.builtin.set_fact:
        agent_result:
          node: >-
            {{ agent_node_name if (no_node_name_suffix | default('false') | lower == 'true') or (agent_node_name | default('') | regex_search('-0$')) else agent_node_name | default('') + '-0' }}
          error: false
          install_path: "{{ splunk_dest_folder | default('') }}"
          agent_type: "{{ agent_type | default('node') }}"
          agent_version: "{{ agent_version | default('') }}"
          action: "{{ agent_action | default('') }}"

    - name: splunk.agent.result
      ansible.builtin.debug:
        msg: "{{ agent_result | to_json }}"

  rescue:
    - name: Splunk_agent_status Install of the Node.js agent failed
      ansible.builtin.debug:
        msg: "Splunk Node.js agent installation failed. Error: {{ ansible_failed_task.name }}"

    - name: Set Node Agent Result Fact
      ansible.builtin.set_fact:
        splunk_agent_result:
          app: null
          tier: null
          node: null
          error: true
          install_path: null
          agent_type: "{{ agent_type | default('splunk-node') }}"
          agent_version: null
          action: "{{ agent_action | default('') }}"

    - name: splunk.agent.result
      ansible.builtin.debug:
        msg: "{{ splunk_agent_result | to_json }}"